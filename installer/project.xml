<project>
    <shortName>xPilot</shortName>
    <fullName>xPilot</fullName>
    <version>2.0.0</version>
    <licenseFile>${root_prefix}/LICENSE</licenseFile>
    <functionDefinitionList>
        <actionDefinition>
            <name>checkXpilotOpen</name>
            <actionList>
                <showProgressDialog>
                    <title>Waiting for xPilot to be closed</title>
                    <actionList>
                        <while>
                            <progressText>The xPilot client is still opened and must be closed before the installation can proceed.</progressText>
                            <actionList>
                                <wait>
                                    <ms>50</ms>
                                </wait>
                            </actionList>
                            <conditionRuleList>
                                <ruleGroup>
                                    <ruleList>
                                        <processTest>
                                            <logic>is_running</logic>
                                            <name>xPilot.exe</name>
                                        </processTest>
                                    </ruleList>
                                </ruleGroup>
                                <platformTest>
                                    <type>windows</type>
                                </platformTest>
                            </conditionRuleList>
                        </while>
                    </actionList>
                </showProgressDialog>
            </actionList>
        </actionDefinition>
    </functionDefinitionList>
    <componentList>
        <component>
            <name>default</name>
            <description>xPilot</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>1</show>
            <folderList>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfiles</name>
                    <platforms>all</platforms>
                    <shortcutList>
                        <shortcut>
                            <comment>Uninstall</comment>
                            <exec>${installdir}/${uninstallerName}</exec>
                            <icon></icon>
                            <name>Uninstall ${product_fullname}</name>
                            <path>${installdir}</path>
                            <platforms>all</platforms>
                            <runAsAdmin>0</runAsAdmin>
                            <runInTerminal>0</runInTerminal>
                            <windowsExec>${installdir}/${uninstallerName}.exe</windowsExec>
                            <windowsExecArgs></windowsExecArgs>
                            <windowsIcon></windowsIcon>
                            <windowsPath>${installdir}</windowsPath>
                        </shortcut>
                    </shortcutList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <allowWildcards>1</allowWildcards>
                            <origin>${bin_prefix}/*</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux32</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <allowWildcards>1</allowWildcards>
                            <origin>${bin_prefix}/*</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswindows64</name>
                    <platforms>windows-x64</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <allowWildcards>1</allowWildcards>
                            <origin>${bin_prefix}/*</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswindows32</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <allowWildcards>1</allowWildcards>
                            <origin>${bin_prefix}/*</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <allowWildcards>1</allowWildcards>
                            <origin>${bin_prefix}/xPilot.app</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>X-Plane Plugin</description>
                    <destination>${xplanepath}/Resources/plugins/xPilot</destination>
                    <name>xplaneplugin</name>
                    <platforms>all</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <allowWildcards>1</allowWildcards>
                            <origin>${plugin_prefix}/*</origin>
                        </distributionFile>
                    </distributionFileList>
                    <ruleList>
                        <stringTest text="${xplanepath}" type="not_empty"/>
                    </ruleList>
                </folder>
            </folderList>
            <startMenuShortcutList>
                <startMenuShortcut>
                    <comment>Uninstall ${product_fullname}</comment>
                    <name>Uninstall ${product_fullname}</name>
                    <runAsAdmin>0</runAsAdmin>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}/${uninstallerName}.exe</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon></windowsIcon>
                    <windowsPath>${installdir}/</windowsPath>
                </startMenuShortcut>
                <startMenuShortcut>
                    <comment>Run ${product_shortname}</comment>
                    <name>${product_shortname}</name>
                    <runAsAdmin>0</runAsAdmin>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}/${product_shortname}.exe</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon></windowsIcon>
                    <windowsPath></windowsPath>
                </startMenuShortcut>
            </startMenuShortcutList>
        </component>
    </componentList>
    <preBuildActionList>
        <setInstallerVariable>
            <name>src_prefix</name>
            <value>${env(INSTALLER_SRC_PREFIX)}</value>
            <ruleList>
                <compareText logic="does_not_equal" text="${env(INSTALLER_SRC_PREFIX)}" value=""/>
            </ruleList>
        </setInstallerVariable>
        <setInstallerVariable>
            <name>bin_prefix</name>
            <value>${env(INSTALLER_BIN_PREFIX)}</value>
            <ruleList>
                <compareText logic="does_not_equal" text="${env(INSTALLER_BIN_PREFIX)}" value=""/>
            </ruleList>
        </setInstallerVariable>
        <setInstallerVariable>
            <name>plugin_prefix</name>
            <value>${env(INSTALLER_PLUGIN_PREFIX)}</value>
            <ruleList>
                <compareText logic="does_not_equal" text="${env(INSTALLER_PLUGIN_PREFIX)}" value=""/>
            </ruleList>
        </setInstallerVariable>
        <setInstallerVariable>
            <name>root_prefix</name>
            <value>${env(REPO_ROOT_PREFIX)}</value>
            <ruleList>
                <compareText logic="does_not_equal" text="${env(REPO_ROOT_PREFIX)}" value=""/>
            </ruleList>
        </setInstallerVariable>
        <runProgram>
            <program>security</program>
            <programArguments>unlock-keychain -p '${password}' "${project.osxSigningKeychainFile}"</programArguments>
            <ruleList>
                <platformTest type="osx"/>
            </ruleList>
        </runProgram>
    </preBuildActionList>
    <preInstallationActionList>
        <checkXpilotOpen/>
        <setInstallerVariable>
            <name>lastInstallDir</name>
            <value>${platform_install_prefix}/${product_shortname}</value>
        </setInstallerVariable>
        <setInstallerVariable>
            <name>lastXplanePath</name>
            <value></value>
        </setInstallerVariable>
        <!-- windows -->
        <actionGroup>
            <actionList>
                <readFile>
                    <name>lastInstallDir</name>
                    <path>${windows_folder_local_appdata}/org.vatsim.xpilot/lastinstallpath.txt</path>
                    <ruleList>
                        <platformTest type="windows"/>
                    </ruleList>
                </readFile>
            </actionList>
            <ruleList>
                <platformTest type="windows"/>
                <fileTest>
                    <condition>readable</condition>
                    <path>${windows_folder_local_appdata}/org.vatsim.xpilot/lastinstallpath.txt</path>
                </fileTest>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <actionList>
                <readFile>
                    <name>lastXplanePath</name>
                    <path>${windows_folder_local_appdata}/org.vatsim.xpilot/lastxplanepath.txt</path>
                    <ruleList>
                        <platformTest type="windows"/>
                    </ruleList>
                </readFile>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>windows</type>
                </platformTest>
                <fileTest>
                    <condition>readable</condition>
                    <path>${windows_folder_local_appdata}/org.vatsim.xpilot/lastxplanepath.txt</path>
                </fileTest>
            </ruleList>
        </actionGroup>
        <!-- macos -->
        <actionGroup>
            <actionList>
                <readFile>
                    <name>lastInstallDir</name>
                    <path>~/Library/Application Support/org.vatsim.xpilot/lastinstallpath.txt</path>
                    <ruleList>
                        <platformTest type="osx"/>
                    </ruleList>
                </readFile>
            </actionList>
            <ruleList>
                <platformTest type="osx"/>
                <fileTest>
                    <condition>readable</condition>
                    <path>~/Library/Application Support/org.vatsim.xpilot/lastinstallpath.txt</path>
                </fileTest>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <actionList>
                <readFile>
                    <name>lastXplanePath</name>
                    <path>~/Library/Application Support/org.vatsim.xpilot/lastxplanepath.txt</path>
                    <ruleList>
                        <platformTest type="osx"/>
                    </ruleList>
                </readFile>
            </actionList>
            <ruleList>
                <platformTest type="osx"/>
                <fileTest>
                    <condition>readable</condition>
                    <path>~/Library/Application Support/org.vatsim.xpilot/lastxplanepath.txt</path>
                </fileTest>
            </ruleList>
        </actionGroup>
        <!-- linux -->
        <actionGroup>
            <actionList>
                <readFile>
                    <name>lastInstallDir</name>
                    <path>~/.local/share/org.vatsim.xpilot/lastinstallpath.txt</path>
                    <ruleList>
                        <platformTest type="linux"/>
                    </ruleList>
                </readFile>
            </actionList>
            <ruleList>
                <platformTest type="linux"/>
                <fileTest>
                    <condition>readable</condition>
                    <path>~/.local/share/org.vatsim.xpilot/lastinstallpath.txt</path>
                </fileTest>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <actionList>
                <readFile>
                    <name>lastXplanePath</name>
                    <path>~/.local/share/org.vatsim.xpilot/lastxplanepath.txt</path>
                    <ruleList>
                        <platformTest type="linux"/>
                    </ruleList>
                </readFile>
            </actionList>
            <ruleList>
                <platformTest type="linux"/>
                <fileTest>
                    <condition>readable</condition>
                    <path>~/.local/share/org.vatsim.xpilot/lastxplanepath.txt</path>
                </fileTest>
            </ruleList>
        </actionGroup>
        <!-- set variables -->
        <setInstallerVariable>
            <name>installdir</name>
            <value>${lastInstallDir}</value>
        </setInstallerVariable>
        <setInstallerVariable>
            <name>xplanepath</name>
            <value>${lastXplanePath}</value>
        </setInstallerVariable>
    </preInstallationActionList>
    <readyToInstallActionList>
        <setInstallerVariable>
            <name>desktop_prefix</name>
            <persist>1</persist>
            <value>~/.local/share/applications</value>
            <ruleList>
                <platformTest type="linux"/>
            </ruleList>
        </setInstallerVariable>
    </readyToInstallActionList>
    <postInstallationActionList>
        <writeFile>
            <encoding>utf-8</encoding>
            <path>${desktop_prefix}/xPilot.desktop</path>
            <text>
[Desktop Entry]
Encoding=UTF-8
Name=xPilot
GenericName=xPilot
Comment=xPilot
Icon=${installdir}/xpilot.png
Exec=${installdir}/xPilot.AppImage
Terminal=false
Type=Application
Categories=Application;
            </text> 
            <ruleList>
                <platformTest type="linux"/>
            </ruleList>
        </writeFile>
        <createDirectory>
            <path>${windows_folder_local_appdata}/org.vatsim.xpilot</path>
            <ruleList>
                <platformTest type="windows"/>
            </ruleList>
        </createDirectory>
        <writeFile>
            <path>${windows_folder_local_appdata}/org.vatsim.xpilot/lastinstallpath.txt</path>
            <text>${installdir}</text>
            <ruleList>
                <platformTest type="windows"/>
            </ruleList>
        </writeFile>
        <writeFile>
            <path>${windows_folder_local_appdata}/org.vatsim.xpilot/lastxplanepath.txt</path>
            <text>${xplanepath}</text>
            <ruleList>
                <platformTest type="windows"/>
            </ruleList>
        </writeFile>
        <!-- macos -->
        <createDirectory>
            <path>~/Library/Application Support/org.vatsim.xpilot</path>
            <ruleList>
                <platformTest type="osx"/>
            </ruleList>
        </createDirectory>
        <writeFile>
            <path>~/Library/Application Support/org.vatsim.xpilot/lastinstallpath.txt</path>
            <text>${installdir}</text>
            <ruleList>
                <platformTest type="osx"/>
            </ruleList>
        </writeFile>
        <writeFile>
            <path>~/Library/Application Support/org.vatsim.xpilot/lastxplanepath.txt</path>
            <text>${xplanepath}</text>
            <ruleList>
                <platformTest type="osx"/>
            </ruleList>
        </writeFile>
        <!-- linux -->
        <createDirectory>
            <path>~/.local/share/org.vatsim.xpilot</path>
            <ruleList>
                <platformTest type="linux"/>
            </ruleList>
        </createDirectory>
        <writeFile>
            <path>~/.local/share/org.vatsim.xpilot/lastinstallpath.txt</path>
            <text>${installdir}</text>
            <ruleList>
                <platformTest type="linux"/>
            </ruleList>
        </writeFile>
        <writeFile>
            <path>~/.local/share/org.vatsim.xpilot/lastxplanepath.txt</path>
            <text>${xplanepath}</text>
            <ruleList>
                <platformTest type="linux"/>
            </ruleList>
        </writeFile>
        <createDirectory>
            <path>${installdir}/.sentry-native</path>
        </createDirectory>
        <addFilesToUninstaller>
            <files>${windows_folder_local_appdata}/org.vatsim.xpilot/</files>
            <matchHiddenFiles>1</matchHiddenFiles>
            <ruleList>
                <platformTest type="windows"/>
            </ruleList>
        </addFilesToUninstaller>
        <addFilesToUninstaller>
            <files>~/Library/Application Support/org.vatsim.xpilot/</files>
            <matchHiddenFiles>1</matchHiddenFiles>
            <ruleList>
                <platformTest type="osx"/>
            </ruleList>
        </addFilesToUninstaller>
        <addFilesToUninstaller>
            <files>~/.local/share/org.vatsim.xpilot/</files>
            <matchHiddenFiles>1</matchHiddenFiles>
            <ruleList>
                <platformTest type="linux"/>
            </ruleList>
        </addFilesToUninstaller>
        <addFilesToUninstaller>
            <files>${desktop_prefix}/xPilot.desktop</files>
            <ruleList>
                <platformTest type="linux"/>
            </ruleList>
        </addFilesToUninstaller>
        <addFilesToUninstaller>
            <files>${installdir}/.sentry-native/</files>
            <matchHiddenFiles>1</matchHiddenFiles>
        </addFilesToUninstaller>
    </postInstallationActionList>
    <compressionAlgorithm>lzma-ultra</compressionAlgorithm>
    <createOsxBundleDmg>1</createOsxBundleDmg>
    <disableSplashScreen>1</disableSplashScreen>
    <enableRollback>0</enableRollback>
    <enableTimestamp>1</enableTimestamp>
    <osxApplicationBundleIcon>${src_prefix}/xpilot.icns</osxApplicationBundleIcon>
    <osxApplicationBundleIdentifier>org.vatsim.xpilot</osxApplicationBundleIdentifier>
    <osxSigningIdentity>${apple_signing_identity}</osxSigningIdentity>
    <osxSigningKeychainFile>/Users/runner/Library/Keychains/Signing keychain-db</osxSigningKeychainFile>
    <startMenuGroupName>xPilot</startMenuGroupName>
    <vendor>xPilot for VATSIM</vendor>
    <windowsExecutableIcon>${src_prefix}/xpilot.ico</windowsExecutableIcon>
    <finalPageActionList>
        <runProgram>
            <program>${installdir}/xPilot.exe</program>
            <programArguments>&amp;</programArguments>
            <progressText>Launch ${project.fullName}</progressText>
            <ruleList>
                <platformTest type="windows"/>
            </ruleList>
        </runProgram>
        <runProgram>
            <program>${installdir}/xPilot.AppImage</program>
            <programArguments>&amp;</programArguments>
            <progressText>Launch ${project.fullName}</progressText>
            <ruleList>
                <platformTest type="linux"/>
            </ruleList>
        </runProgram>
        <runProgram>
            <program>open</program>
            <programArguments>${installdir}/xPilot.app</programArguments>
            <progressText>Launch ${project.fullName}</progressText>
            <ruleList>
                <platformTest type="osx"/>
            </ruleList>
        </runProgram>
    </finalPageActionList>
    <parameterList>
        <directoryParameter>
            <name>xplanepath</name>
            <title>X-Plane 11 Location</title>
            <description></description>
            <explanation>Please browse to the folder where X-Plane 11 is installed so that the xPilot plugin can be installed.

Advanced Users: If X-Plane is not installed on this computer, leave the folder path empty to skip installing the plugin. You will need to run the installer on the computer where X-Plane is installed to install the plugin.</explanation>
            <value></value>
            <default></default>
            <allowEmptyValue>1</allowEmptyValue>
            <mustBeWritable>0</mustBeWritable>
            <mustExist>1</mustExist>
            <width>40</width>
            <validationActionList>
                <throwError text="Invalid X-Plane folder path. The path should be the root folder of where X-Plane.exe is installed.">
                    <ruleList>
                        <stringTest text="${xplanepath}" type="not_empty"/>
                        <fileExists negate="1" path="${xplanepath}/X-Plane.exe"/>
                        <platformTest type="windows"/>
                    </ruleList>
                </throwError>
                <throwError text="Invalid X-Plane folder path. The path should be the root folder of where X-Plane.app is installed.">
                    <ruleList>
                        <stringTest text="${xplanepath}" type="not_empty"/>
                        <fileExists negate="1" path="${xplanepath}/X-Plane.app"/>
                        <platformTest type="osx"/>
                    </ruleList>
                </throwError>
                <throwError text="Invalid X-Plane folder path. The path should be the root folder of where the X-Plane-x86_64 executable is installed.">
                    <ruleList>
                        <stringTest text="${xplanepath}" type="not_empty"/>
                        <fileExists negate="1" path="${xplanepath}/X-Plane-x86_64"/>
                        <platformTest type="linux"/>
                    </ruleList>
                </throwError>
                <substitute>
                    <files>${xplanepath}/Output/preferences/X-Plane.prf</files>
                    <type>regexp</type>
                    <substitutionList>
                        <substitution pattern="^_rcv_port\s+(?!49000).*$" value="_rcv_port 49000"/>
                        <substitution pattern="^_disable_incoming_networking\s+1$" value="_disable_incoming_networking 0"/>
                    </substitutionList>
                </substitute>
            </validationActionList>
        </directoryParameter>
        <directoryParameter>
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value></value>
            <default>${platform_install_prefix}/${product_fullname}</default>
            <allowEmptyValue>0</allowEmptyValue>
            <cliOptionName>prefix</cliOptionName>
            <mustBeWritable>1</mustBeWritable>
            <mustExist>0</mustExist>
            <width>40</width>
        </directoryParameter>
    </parameterList>
</project>

