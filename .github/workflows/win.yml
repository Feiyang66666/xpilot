name: Build Windows

on: push

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  QT_VERSION: 5.15.2
  BUILD_TYPE: RelWithDebInfo
  VATSIM_CLIENT_ID: ${{ secrets.VATSIM_CLIENT_ID }}
  VATSIM_CLIENT_KEY: ${{ secrets.VATSIM_CLIENT_KEY }}
  CONFIG_ENCRYPTION_KEY: ${{ secrets.CONFIG_ENCRYPTION_KEY }}
  IB_LICENSE: ${{ secrets.INSTALLBUILDER_LICENSE }}
  IB_URL: https://installbuilder.com/installbuilder-enterprise-21.9.0-windows-x64-installer.exe
  IB_DIR: ../ib

jobs:

  build:
    runs-on: windows-latest

    steps:

      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
            setup-python: false
            version: ${{ env.QT_VERSION }}
          
      - name: Install conan
        run: |
          python3 -m pip install --upgrade pip
          pip3 install conan
          pip3 install conan_package_tools

      - name: Initialize CMake
        run: |
          cmake -E make_directory ${{ github.workspace }}/build

      - name: Install conan packages
        working-directory: ${{ github.workspace }}/build
        run: |
          conan install ..

      - name: CMake
        working-directory: ${{ github.workspace }}/build
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DVATSIM_CLIENT_ID=${{ env.VATSIM_CLIENT_ID }} -DVATSIM_CLIENT_KEY=${{ env.VATSIM_CLIENT_KEY }} -DCONFIG_ENCRYPTION_KEY=${{ env.CONFIG_ENCRYPTION_KEY }}

      - name: Build
        working-directory: ${{ github.workspace }}/build
        run: |
          cmake --build . --config ${{ env.BUILD_TYPE }}

      - name: Qt Deploy
        working-directory: ${{ github.workspace }}\build\bin
        shell: bash
        run: |
          ${{ env.Qt5_DIR }}/bin/windeployqt.exe xPilot.exe \
          -qmldir="${{ github.workspace}}/Resources"
          echo "XPILOT_BIN_DIR=`pwd`" >> $GITHUB_ENV

      - name: Get version
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          echo "XPILOT_VERSION=$(cat xpilot.json | cat xpilot.json | jq -r '"\(.version.major).\(.version.minor).\(.version.patch)"')" >> $GITHUB_ENV

      - name: Setup InstallBuilder
        shell: bash
        run: |
          curl -L ${{ env.IB_URL }} --output ib.exe
          ./ib.exe --mode unattended --prefix ${{ env.IB_DIR  }}
          ${{ env.IB_IDR }}/bin/builder-cli.exe --version
          echo "$IB_LICENSE" > lic.xml
          echo "INSTALLER_SRC_PREFIX=$(pwd)" >> $GITHUB_ENV
          echo "INSTALLER_BIN_PREFIX=$XPILOT_BIN_DIR" >> $GITHUB_ENV

      - name: Create installer
        shell: bash
        run: |
          ${{ env.IB_DIR }}/bin/builder-cli.exe build installer/project.xml \
              --license lic.xml \
              --setvars project.outputDirectory=$(pwd) \
              --setvars project.version=${{ env.XPILOT_VERSION }}

      - uses: actions/upload-artifact@master
        with:
          name: xPilot-${{ env.XPILOT_VERSION }}-windows-x64-installer.exe
          path: xPilot-${{ env.XPILOT_VERSION }}-windows-x64-installer.exe